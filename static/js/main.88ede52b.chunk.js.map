{"version":3,"sources":["Components/Logo/brain.png","Components/Logo/logo.js","Components/Navigation/navigation.js","Components/ImageLinkForm/imageLinkForm.js","Components/FaceRecognition/faceRecognition.js","Components/Footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","id","className","options","max","style","height","width","alt","src","BrainLogo","Navigation","ImageLinkForm","onInputChange","onSubmit","type","onChange","onClick","FaceRegoc","imageUrl","box","i","length","map","topRow","rightCol","bottomRow","leftCol","top","right","bottom","left","footer","app","Clarifai","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","event","setState","input","target","calcFaceBox","data","allFaceBoxMeasurements","outputs","regions","image","document","getElementById","Number","boxInfoArray","measurementsList","region_info","bounding_box","left_col","top_row","right_col","bottom_row","push","saveFaceBoxMeasurements","boxInfo","state","models","predict","FACE_DETECT_MODEL","then","res","catch","err","console","log","params","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.88ede52b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brain.b6394610.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport BrainLogo from './brain.png';\r\nimport './style.css';\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div id=\"logoDiv\">\r\n            <Tilt className=\"Tilt\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\"><img alt=\"Logo\" src={BrainLogo}/></div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../Logo/logo';\r\nimport './style.css';\r\n\r\nconst Navigation = () => {\r\n    return(\r\n        <nav className=\"ma5\">\r\n            <Logo />\r\n            <div className=\"flex\">\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst ImageLinkForm = ( { onInputChange, onSubmit }) => {\r\n    return(\r\n        <div className=\"shadow-4 pa3 w-60 flex center ma5\">\r\n            <div className=\"w-90 center\">\r\n                <p className=\"center\">{'This magic brain will detect faces in your pictures. Give it a try'}</p>\r\n                <div id=\"imageLinkDiv\" className=\"pa3\">\r\n                    <input type=\"text\" className=\"f4 pa2 w-70 center db ma3\" onChange={onInputChange}></input>\r\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple pointer br3 shadow-4\" onClick={onSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst FaceRegoc = ( {imageUrl, box} ) => {\r\n    if(!imageUrl){\r\n        return(\r\n            null\r\n        )\r\n    }\r\n    else{\r\n        for(let i = 0; i<box.length; i++){}\r\n        return(\r\n            <div id=\"faceRecDiv\" className=\"\">\r\n                <div id=\"faceDiv\" className='absolute'>\r\n                    <img id=\"faceImgDiv\" alt=\"\" src={imageUrl} width='500px' height='auto'/>\r\n                    {\r\n                        box.map((box, i) => {\r\n                            const { topRow, rightCol, bottomRow, leftCol } = box;\r\n                            return (<div key={i} className='bounding-box' style={{top: topRow, right: rightCol, bottom: bottomRow, left: leftCol}}></div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\r\nexport default FaceRegoc;","import React from 'react';\r\n\r\n\r\nconst footer = () => {\r\n    return(\r\n        \r\n        <div style={{height: 490}}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/navigation';\nimport ImageLinkForm from './Components/ImageLinkForm/imageLinkForm';\nimport Rank from './Components/Rank/rank';\nimport FaceRegocnition from './Components/FaceRecognition/faceRecognition';\nimport Footer from './Components/Footer/footer';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'a3ba74ce678345729b78e9ae8389bb84'\n})\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: []\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value});\n  };\n\n  calcFaceBox = (data) => {\n    const allFaceBoxMeasurements = data.outputs[0].data.regions;\n    const image = document.getElementById('faceImgDiv');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const boxInfoArray = [];\n\n    for(let i = 0; i<allFaceBoxMeasurements.length; i++){\n      const measurementsList = {\n        leftCol: allFaceBoxMeasurements[i].region_info.bounding_box.left_col * width,\n        topRow: allFaceBoxMeasurements[i].region_info.bounding_box.top_row * height,\n        rightCol: width - (allFaceBoxMeasurements[i].region_info.bounding_box.right_col * width),\n        bottomRow: height - (allFaceBoxMeasurements[i].region_info.bounding_box.bottom_row * height)\n      }\n        boxInfoArray.push(measurementsList);\n    }\n    return boxInfoArray ;\n  };\n\n  saveFaceBoxMeasurements = (boxInfo) => {\n    this.setState( {box : boxInfo});\n  };\n\n  onSubmit = () => {\n    this.setState( {imageUrl: this.state.input});\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(res => {\n          this.saveFaceBoxMeasurements(this.calcFaceBox(res));\n        }).catch(err => console.log(err));\n  };\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation />\n        <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n        <FaceRegocnition imageUrl={this.state.imageUrl} box={ this.state.box}/>\n        <Footer/>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <App />, document.getElementById('root') );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}